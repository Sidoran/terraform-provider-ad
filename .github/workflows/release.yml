name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
    goreleaser:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            with:
              # Allow goreleaser to access older tag information.
              fetch-depth: 0
          - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
            with:
              go-version-file: 'go.mod'
              cache: true
          - name: Import GPG key
            uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
            id: import_gpg
            with:
              gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
              passphrase: ${{ secrets.PASSPHRASE }}
          - name: Run GoReleaser
            uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
            with:
              args: release --clean
            env:
              # GitHub sets the GITHUB_TOKEN secret automatically.
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
#   go-version:
#     runs-on: ubuntu-latest
#     outputs:
#       version: ${{ steps.go-version.outputs.version }}
#     steps:
#       - uses: actions/checkout@v4 # v4.0.0
#       - id: go-version
#         run: echo "{version}={$(cat ./.go-version)}" >> $GITHUB_OUTPUT
#   release-notes:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4 # v4.0.0
#         with:
#           fetch-depth: 0
#       - name: Generate Release Notes
#         run: sed -n -e "1{/# /d;}" -e "2{/^$/d;}" -e "/# $(git describe --abbrev=0 --exclude="$(git describe --abbrev=0 --match='v*.*.*' --tags)" --match='v*.*.*' --tags | tr -d v)/q;p" CHANGELOG.md > release-notes.txt
#       - uses: actions/upload-artifact@v4 # v3.1.3
#         with:
#           name: release-notes
#           path: release-notes.txt
#           retention-days: 1
#   terraform-provider-release:
#     name: 'Terraform Provider Release'
#     needs: [go-version, release-notes]
#     uses: hashicorp/ghaction-terraform-provider-release/.github/workflows/hashicorp.yml@v4.0.1
#     secrets:
#       hc-releases-github-token: '${{ secrets.HASHI_RELEASES_GITHUB_TOKEN }}'
#       hc-releases-host-staging: '${{ secrets.HC_RELEASES_HOST_STAGING }}'
#       hc-releases-host-prod: '${{ secrets.HC_RELEASES_HOST_PROD }}'
#       hc-releases-key-prod: '${{ secrets.HC_RELEASES_KEY_PROD }}'
#       hc-releases-key-staging: '${{ secrets.HC_RELEASES_KEY_STAGING }}'
#       hc-releases-terraform-registry-sync-token: '${{ secrets.TF_PROVIDER_RELEASE_TERRAFORM_REGISTRY_SYNC_TOKEN }}'
#       setup-signore-github-token: '${{ secrets.HASHI_SIGNORE_GITHUB_TOKEN }}'
#       signore-client-id: '${{ secrets.SIGNORE_CLIENT_ID }}'
#       signore-client-secret: '${{ secrets.SIGNORE_CLIENT_SECRET }}'
#     with:
#       release-notes: true
#       setup-go-version: '${{ needs.go-version.outputs.version }}'
#       # Product Version (e.g. v1.2.3 or github.ref_name)
#       product-version: '${{ github.ref_name }}'
